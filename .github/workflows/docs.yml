name: Documentation

on:
  push:
    branches: [ main, dev ]
    paths:
      - 'docs/**'
      - 'climapan_lab/**'
      - '.readthedocs.yaml'
      - 'pyproject.toml'
      - 'requirements.txt'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'climapan_lab/**'
      - '.readthedocs.yaml'

jobs:
  build-docs:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for proper version detection
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-docs-${{ hashFiles('docs/requirements.txt', 'requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-docs-
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r docs/requirements.txt
        pip install -e .
    
    - name: Build documentation
      run: |
        cd docs
        sphinx-build -W -b html . _build/html
    
    - name: Check documentation links
      run: |
        cd docs
        sphinx-build -W -b linkcheck . _build/linkcheck
      continue-on-error: true  # Don't fail if external links are down
    
    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v4
      with:
        name: documentation-html
        path: docs/_build/html/
        retention-days: 7
    
    - name: Deploy to GitHub Pages (on main branch)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: docs/_build/html
        destination_dir: docs
        
  trigger-rtd:
    needs: build-docs
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Trigger Read the Docs build
      if: ${{ secrets.RTD_WEBHOOK_URL }}
      run: |
        curl -X POST \
          -H "Content-Type: application/json" \
          -d '{"branches": ["main"]}' \
          ${{ secrets.RTD_WEBHOOK_URL }}
      continue-on-error: true
    
    - name: Notify documentation update
      run: |
        echo "Documentation has been updated and should be available at:"
        echo "https://climapan-lab.readthedocs.io/en/latest/"
        echo ""
        echo "If this is the first setup, please:"
        echo "1. Go to https://readthedocs.org"
        echo "2. Import this repository"
        echo "3. Configure the webhook for automatic builds"

  check-docs-coverage:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install interrogate
        pip install -e .
    
    - name: Check docstring coverage
      run: |
        interrogate climapan_lab/ --ignore-init-method --ignore-magic --fail-under=50 --verbose
      continue-on-error: true
    
    - name: Generate docstring coverage report
      run: |
        interrogate climapan_lab/ --ignore-init-method --ignore-magic --generate-badge docs/_static/
        echo "Docstring coverage report generated"
      continue-on-error: true 